buildscript {
    ext {
        javaVersion = 1.8
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.3.RELEASE"
    id "com.jfrog.bintray" version "1.7.3"
}


apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'groovy'

apply from: "${rootProject.projectDir}/gradle/findbugs.gradle"
apply from: "${rootProject.projectDir}/gradle/git-hooks.gradle"
apply from: "${rootProject.projectDir}/gradle/maven-publish.gradle"



sourceCompatibility = javaVersion
targetCompatibility = javaVersion

tasks.withType(JavaCompile) { options.encoding = 'utf-8' }

repositories {
    mavenLocal()
    mavenCentral()
}

dependencyManagement {
    dependencies {
        dependency "org.projectlombok:lombok:1.16.18"
        dependency "com.google.code.findbugs:annotations:3.0.1"
        dependency group: 'org.spockframework', name: 'spock-core', version: '1.1-groovy-2.4'
        dependency('com.athaydes:spock-reports:1.2.12') {
            exclude group: 'org.codehaus.groovy'
            exclude group: 'org.spockframework'
        }

    }
}

dependencies {
    compileOnly "org.projectlombok:lombok"
    testCompileOnly "org.projectlombok:lombok"
    compileOnly 'com.google.code.findbugs:annotations'
    testCompileOnly 'com.google.code.findbugs:annotations'

    // tests frameworks
    compile group: 'org.spockframework', name: 'spock-core'
    // to mock concrete class
    compile group: 'net.bytebuddy', name: 'byte-buddy', version: '1.7.9'
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.12'

    // mock server
    testCompile group: 'com.github.tomakehurst', name: 'wiremock-standalone', version: '2.12.0'

    // e2e test
    compile 'com.jayway.restassured:rest-assured:2.4.0'
    compile 'com.jayway.awaitility:awaitility:1.7.0'

}

test {
    exclude '**/deployment/*'
    exclude '**/specs/*'
    exclude '**/*LearningTest*'
    exclude '**/*Console*'
}

idea {
    project {

        jdkName = javaVersion
        languageLevel = javaVersion

        ipr.withXml { xmlFile ->
            // setup Git root
            xmlFile.asNode().component.find { it.@name == 'VcsDirectoryMappings' }.replaceNode {
                component(name: 'VcsDirectoryMappings') {
                    mapping(directory: "", vcs: "Git")
                    mapping(directory: "\$PROJECT_DIR\$", vcs: 'Git')
                }
            }

            // setup annotationProcessing for lombok
            xmlFile.asNode().component.find {
                it.@name == 'CompilerConfiguration'
            }.annotationProcessing.replaceNode {
                annotationProcessing() {
                    profile(default: "true", name: "Default", enabled: 'true')
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2.1'
}
